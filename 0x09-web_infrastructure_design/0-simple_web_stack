# 0-simple_web_stack

User flow:

1. The user types "www.foobar.com" in their browser.
2. The browser queries DNS to resolve "www.foobar.com" into an IP address (A record → 8.8.8.8).
3. The browser opens a TCP connection to the server at 8.8.8.8 on port 80 (HTTP) or 443 (HTTPS).
4. Nginx (web server) receives the request:
   - Serves static files directly from the codebase.
   - For dynamic content, forwards the request to the application server.
5. The application server executes the application code, possibly querying the MySQL database.
6. MySQL returns data to the application server.
7. The application server sends the response back to Nginx.
8. Nginx sends the final response to the user's browser.

Components:

- **Server**: A physical or virtual machine with IP 8.8.8.8 running the OS, Nginx, application server, and MySQL.
- **Domain name**: Human-readable name ("foobar.com") mapped to the server IP so users don’t need to remember numbers.
- **DNS record type for `www`**: An **A record** mapping `www.foobar.com` to 8.8.8.8.
- **Web server (Nginx)**: Handles HTTP requests, serves static content, and forwards dynamic requests to the application server.
- **Application server**: Runs the back-end application code to generate dynamic responses.
- **Application files**: The codebase containing HTML, CSS, JS, and server-side scripts.
- **Database (MySQL)**: Stores and retrieves persistent application data.
- **Communication**: The server and user's computer communicate over the Internet using TCP/IP via HTTP or HTTPS.

Issues with this infrastructure:

1. **Single Point of Failure (SPOF)** – If the server fails, the entire site goes down.
2. **Downtime during maintenance** – Restarting Nginx or deploying new code interrupts service.
3. **No scalability** – All load is handled by one machine; it cannot handle large spikes in traffic.

Diagram (text representation):

 [User Browser]
        |
   DNS resolves "www.foobar.com" -> 8.8.8.8
        |
  Internet (HTTP/HTTPS over TCP)
        |
 [Server: 8.8.8.8]
  |-- Nginx (Web Server)
        |
        --> Application Server
              |
              --> Application Files (Codebase)
              |
              --> MySQL Database
